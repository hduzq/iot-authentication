% activation
% 1. device -> AS: SD,Enc(PS,SD||R1)
% 2. AS -> device: Enc(PS,DS||R1||R2)
% 3. device -> AS: Enc(DS,R2)

role device(SD,AS:agent,PS:symmetric_key,Hash:hash_func,SND,RCV:channel(dy))
played_by SD
def=
    local
        State:nat,
        R1,R2: text,
        DS: symmetric_key
    init
        State := 0
    transition
        1. State=0 /\ RCV(start) =|>
           State':=1 /\ R1':=new() /\ SND(SD.{SD.R1'}_PS) /\ witness(SD,AS,auth_r1,R1')

        2. State=1 /\ RCV({DS'.R1.R2'}_PS) =|>
           State':=2 /\ SND({R2'}_DS') /\ request(SD,AS,auth_r2,R2')

end role

%----------------------------------------------------------------------------------------------------

role authserver(AS,SD:agent,PS:symmetric_key,Hash:hash_func,SND,RCV:channel(dy))
played_by AS
def=
    local
        State:nat,
        R1,R2: text,
        DS: symmetric_key
    init
        State := 0
    transition
        1. State=0 /\ RCV(SD.{SD.R1'}_PS) =|>
           State':=1 /\ DS':=new() /\ R2':=new() /\ SND({DS'.R1'.R2'}_PS) /\ secret(DS',sec_ds,{AS,SD}) /\ request(AS,SD,auth_r1,R1') /\ witness(AS,SD,auth_r2,R2')

        2. State=1 /\ RCV({R2}_DS) =|>
           State':=2 
end role

%----------------------------------------------------------------------------------------------------

role session(SD,AS:agent,PS:symmetric_key,Hash:hash_func)
def=
    local
        SND1,RCV1,SND2,RCV2:channel(dy)
    composition
        device(SD,AS,PS,Hash,SND1,RCV1) /\
        authserver(AS,SD,PS,Hash,SND2,RCV2)
end role

%----------------------------------------------------------------------------------------------------

role environment()
def=
    const
        sd1,sd2,as:agent,
        ps:symmetric_key,
        myhash:hash_func,
        sec_ds,auth_r1,auth_r2:protocol_id

        intruder_knowledge = {sd1, sd2, as, myhash}
        composition
            session(sd1,as,ps,myhash)
            %/\ session(sd1,as,ps,myhash)
            /\ session(sd2,as,ps,myhash)
            /\ session(i,as,ps,myhash)
            %/\ session(sd1,i,ps,myhash)
end role

%----------------------------------------------------------------------------------------------------

goal
    secrecy_of sec_ds
    authentication_on auth_r1,auth_r2
end goal

%----------------------------------------------------------------------------------------------------

environment()
